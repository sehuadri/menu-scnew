#!/bin/bash
clear
PERMISSION() {
    # Alamat URL lisensi disimpan dalam variabel agar mudah diubah
    local LICENSE_URL="https://raw.githubusercontent.com/sehuadri/scnew/main/ip"
    
    # Dapatkan informasi IP dan tanggal saat ini
    local MYIP=$(curl -sS ipv4.icanhazip.com)
    local TODAY_DATE=$(date +'%Y-%m-%d')

    # Cari baris di mana kolom ke-4 cocok persis dengan MYIP.
    # Ini lebih akurat daripada grep dan menghilangkan kebutuhan cek kedua.
    local AUTHORIZED_ENTRY=$(curl -sS "$LICENSE_URL" | awk -v myip="$MYIP" '$4 == myip' | head -1)

    # Cek apakah IP ditemukan di kolom yang benar.
    if [[ -z "$AUTHORIZED_ENTRY" ]]; then
        echo -e "\033[1;91mPermission Denied (IP Not Registered)\033[0m"
        echo -e "\033[1;97mAkses Ditolak (IP Tidak Terdaftar)${NC}"
        read -n 1 -s -r -p "Press [ Enter ] to Exit"
        exit 1
    fi

    # Ekstrak hanya tanggal/status dari kolom ke-3.
    local EXP_STATUS=$(echo "$AUTHORIZED_ENTRY" | awk '{print $3}')

    # Lakukan perbandingan tanggal/status.
    if [[ "$EXP_STATUS" == "lifetime" ]]; then
        echo -e "\033[1;92mPermission Accepted (Lifetime User)\033[0m"
        echo -e "\033[1;97mAkses Diizinkan (Pengguna Lifetime)${NC}"
    elif [[ "$TODAY_DATE" < "$EXP_STATUS" ]]; then
        echo -e "\033[1;92mPermission Accepted\033[0m"
        echo -e "\033[1;97mAkses Diizinkan${NC}"
    elif [[ "$TODAY_DATE" == "$EXP_STATUS" ]]; then
        echo -e "\033[1;93mPermission Accepted (Today is Expiry Date)\033[0m"
        echo -e "\033[1;97mAkses Diizinkan (Hari Ini Kadaluarsa)${NC}"
    else
        echo -e "\033[1;91mPermission Denied (Expired)\033[0m"
        echo -e "\033[1;97mAkses Ditolak (Kadaluarsa)${NC}"
        read -n 1 -s -r -p "Press [ Enter ] to Exit"
        exit 1
    fi
}

# Memanggil fungsi untuk dieksekusi
PERMISSION
clear
IGreen='\033[0;92m'
BlueCyan='\e[5;36m'
Xark='\e[0m'
ungu='\033[0;35m'
yellow='\e[33m'
BIWhite='\033[1;97m'
BIYellow='\033[1;93m'
WhiteBe='\e[5;37m'
GreenBe='\e[5;32m'
BlueCyan='\e[5;36m'
Xark='\e[0m'
NC='\033[0m'
clear
function baris_panjang() {
  echo -e "${BIWhite}──────────────────────────────────────${Xark} "
}


function osx_ubuntu() {
  baris_panjang
  echo -e "${BIYellow}Pilih Os Ubuntu${Xark} "
  baris_panjang
  echo -e "${IGreen}[${BIWhite}01${IGreen}] ${NC}${BIWhite}Ubuntu Versi 20.04${NC}"
  echo -e "${IGreen}[${BIWhite}02${IGreen}] ${NC}${BIWhite}Ubuntu Versi 22.04${NC}"
  echo -e "${IGreen}[${BIWhite}03${IGreen}] ${NC}${BIWhite}Ubuntu Versi 24.04${NC}"
  echo -e "${IGreen}[${BIWhite}04${IGreen}] ${NC}${BIWhite}Ubuntu Versi 24.10${NC}"
  baris_panjang
  echo -e "${BIYellow}Input x or [ Ctrl+C ] • To-${BIWhite}Exit${NC}"
  baris_panjang
  echo ""
  read -p "Select menu :" opt
  echo -e ""
case $opt in
1) clear ; ub20.04 ;;
2) clear ; ub22.04 ;;
3) clear ; ub24.04 ;;
4) clear ; ub24.10 ;;
x) clear ; menu ;;
*) echo "anda salah tekan" ; sleep 1 ; m-rebuild ;;
esac

}


function ub20.04() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Ubuntu 20.04 && reboot
}

function ub22.04() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Ubuntu 22.04 && reboot
}

function ub24.04() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Ubuntu 24.04 && reboot
}

function ub24.10() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Ubuntu 24.10 && reboot
}

function osx_debian() {
  baris_panjang
  echo -e "${BIYellow}Pilih Os Debian${Xark} "
  baris_panjang
  echo -e "${IGreen}[${BIWhite}01${IGreen}] ${NC}${BIWhite}Debian 10${NC}"
  echo -e "${IGreen}[${BIWhite}02${IGreen}] ${NC}${BIWhite}Debian 11${NC}"
  echo -e "${IGreen}[${BIWhite}03${IGreen}] ${NC}${BIWhite}Debian 12${NC}"
  baris_panjang
  echo -e "${BIYellow}Input x or [ Ctrl+C ] • To-${BIWhite}Exit${NC}"
  baris_panjang
  echo ""
  read -p "Select menu :" opt
  echo -e ""
case $opt in
1) clear ; deb10 ;;
2) clear ; deb11 ;;
3) clear ; deb12 ;;
x) clear ; menu ;;
*) echo "anda salah tekan" ; sleep 1 ; m-rebuild ;;
esac

}

function deb10() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Debian 10 && reboot
}
function deb11() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Debian 11 && reboot
}

function deb12() {
  curl -O https://raw.githubusercontent.com/bin456789/reinstall/main/reinstall.sh && bash reinstall.sh Debian 12 && reboot
}

function Banner() {
  baris_panjang
  echo -e "${BIYellow}REBUILD MANAGER${NC}"
  baris_panjang
}


function Menu_Features() {
  echo -e "${IGreen}[${BIWhite}01${IGreen}] ${NC}${BIWhite}Rebuild Vps Debian${NC}"
  echo -e "${IGreen}[${BIWhite}02${IGreen}] ${NC}${BIWhite}Rebuild Vps Ubuntu${NC}"
  baris_panjang
  echo -e "${BIYellow}Input x or [ Ctrl+C ] • To-${BIWhite}Exit${Xark}"
  baris_panjang
}

Banner
Menu_Features
read -p "Select Menu :" Opt
case $Opt in
1) clear ; osx_debian ;;
2) clear ; osx_ubuntu ;;
x) clear ; menu ;;
*) echo "anda salah tekan" ; sleep 1 ; m-rebuild ;;
esac
